{{- $envAll := . }}
{{- $dependencies := .Values.dependencies.api }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: keystone-api
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.upgrades.revision_history }}
  strategy:
    type: {{ .Values.upgrades.pod_replacement_strategy }}
    {{ if eq .Values.upgrades.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.upgrades.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.upgrades.rolling_update.max_surge }}
    {{ end }}
  template:
    metadata:
      labels:
        app: keystone-api
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.hash" }}
        pod.beta.kubernetes.io/init-containers: '[
{{ tuple $envAll $dependencies | include "helm-toolkit.kubernetes_entrypoint_init_container" | indent 10 }}
        ]'
    spec:
      nodeSelector:
        {{ .Values.labels.node_selector_key }}: {{ .Values.labels.node_selector_value }}
      containers:
        - name: keystone-api
          image: {{ .Values.images.api }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
          {{- if .Values.resources.enabled }}
          resources:
            limits:
              cpu: {{ .Values.resources.api.limits.cpu | quote }}
              memory: {{ .Values.resources.api.limits.memory | quote }}
            requests:
              cpu: {{ .Values.resources.api.requests.cpu | quote }}
              memory: {{ .Values.resources.api.requests.memory | quote }}
          {{- end }}
          command:
            - bash
            - /tmp/start.sh
          ports:
            - containerPort: {{ .Values.network.port.public }}
            - containerPort: {{ .Values.network.port.admin }}
          lifecycle:
            preStop:
              exec:
                command:
                  - apachectl
                  - -k
                  - graceful-stop
          readinessProbe:
            tcpSocket:
              port: {{ .Values.network.port.public }}
          volumeMounts:
            - name: pod-etc-keystone
              mountPath: /etc/keystone
            - name: keystoneconf
              mountPath: /etc/keystone/keystone.conf
              subPath: keystone.conf
              readOnly: true
            - name: keystonepaste
              mountPath: /etc/keystone/keystone-paste.ini
              subPath: keystone-paste.ini
              readOnly: true
            - name: keystonepolicy
              mountPath: /etc/keystone/policy.json
              subPath: policy.json
              readOnly: true
            - name: keystonessotemplate
              mountPath: /etc/keystone/sso_callback_template.html
              subPath: sso_callback_template.html
              readOnly: true
            - name: wsgikeystone
              mountPath: /etc/apache2/conf-enabled/wsgi-keystone.conf
              subPath: wsgi-keystone.conf
              readOnly: true
            - name: mpmeventconf
              mountPath: /etc/apache2/mods-available/mpm_event.conf
              subPath: mpm_event.conf
              readOnly: true
            - name: startsh
              mountPath: /tmp/start.sh
              subPath: start.sh
              readOnly: true
      volumes:
        - name: pod-etc-keystone
          emptyDir: {}
        - name: keystoneconf
          configMap:
            name: keystone-etc
        - name: keystonepaste
          configMap:
            name: keystone-etc
        - name: keystonepolicy
          configMap:
            name: keystone-etc
        - name: keystonessotemplate
          configMap:
            name: keystone-etc
        - name: wsgikeystone
          configMap:
            name: keystone-etc
        - name: mpmeventconf
          configMap:
            name: keystone-etc
        - name: startsh
          configMap:
            name: keystone-bin
