# Copyright 2017 The Openstack-Helm Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: memcached
spec:
  replicas: {{ .Values.resources.memcached.replicas }}
  revisionHistoryLimit: {{ .Values.upgrades.revision_history }}
  strategy:
    type: {{ .Values.upgrades.pod_replacement_strategy }}
    {{ if eq .Values.upgrades.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.upgrades.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.upgrades.rolling_update.max_surge }}
    {{ end }}  
  template:
    metadata:
      labels:
        app: memcached
    spec:
      nodeSelector:
        {{ .Values.labels.node_selector_key }}: {{ .Values.labels.node_selector_value }}
      containers:
        - name: memcached
          image: {{ .Values.images.memcached }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
          {{- if .Values.resources.enabled }}
          resources:
            limits:
              cpu: {{ .Values.resources.api.limits.cpu | quote }}
              memory: {{ .Values.resources.api.limits.memory | quote }}
            requests:
              cpu: {{ .Values.resources.api.requests.cpu | quote }}
              memory: {{ .Values.resources.api.requests.memory | quote }}
          {{- end }}
          command: ["sh", "-xec"]
          args:
            - |
              exec memcached -v \
                -p {{ .Values.network.port }} \
                -U 0 \
                -c {{ .Values.memcached.max_connections }} \
                -m {{ .Values.memcached.memory }};
          ports:
            - containerPort: {{ .Values.network.port }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.network.port }}
