{{- $envAll := . }}
{{- $dependencies := .Values.dependencies.api }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nova-api-osapi
spec:
  replicas: {{ .Values.control_replicas }}
  revisionHistoryLimit: {{ .Values.upgrades.revision_history }}
  strategy:
    type: {{ .Values.upgrades.pod_replacement_strategy }}
    {{ if eq .Values.upgrades.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.upgrades.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.upgrades.rolling_update.max_surge }}
    {{ end }}
  template:
    metadata:
      labels:
        app: nova-osapi
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.hash" }}
        pod.beta.kubernetes.io/init-containers: '[
{{ tuple $envAll $dependencies | include "helm-toolkit.kubernetes_entrypoint_init_container" | indent 10 }}
        ]'
    spec:
      nodeSelector:
        {{ .Values.labels.control_node_selector_key }}: {{ .Values.labels.control_node_selector_value }}
      containers:
        - name: nova-osapi
          image: {{ .Values.images.api }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          {{- if .Values.resources.enabled }}
          resources:
            requests:
              memory: {{ .Values.resources.nova_osapi.requests.memory | quote }}
              cpu: {{ .Values.resources.nova_osapi.requests.cpu | quote }}
            limits:
              memory: {{ .Values.resources.nova_osapi.limits.memory | quote }}
              cpu: {{ .Values.resources.nova_osapi.limits.cpu | quote }}
          {{- end }}
          command:
            - nova-api
            - --config-file=/etc/nova/nova.conf
          ports:
            - containerPort: {{ .Values.network.port.osapi }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.network.port.osapi }}
          volumeMounts:
            - name: novaconf
              mountPath: /etc/nova/nova.conf
              subPath: nova.conf
      volumes:
        - name: novaconf
          configMap:
            name: nova-etc
            items:
            - key: nova.conf
              path: nova.conf
