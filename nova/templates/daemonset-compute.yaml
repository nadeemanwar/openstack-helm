{{- $envAll := . }}
{{- $dependencies := .Values.dependencies.compute }}
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: nova-compute
spec:
  template:
    metadata:
      labels:
        app: nova-compute
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.hash" }}
        pod.beta.kubernetes.io/init-containers: '[
{{ tuple $envAll $dependencies | include "helm-toolkit.kubernetes_entrypoint_init_container" | indent 10 }}
        ]'
    spec:
      nodeSelector:
        {{ .Values.labels.compute_node_selector_key }}: {{ .Values.labels.compute_node_selector_value }}
      securityContext:
        runAsUser: 0
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirst
      containers:
        - name: nova-compute
          image: {{ .Values.images.compute }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
          {{- if .Values.resources.enabled }}
          resources:
            requests:
              memory: {{ .Values.resources.nova_compute.requests.memory | quote }}
              cpu: {{ .Values.resources.nova_compute.requests.cpu | quote }}
            limits:
              memory: {{ .Values.resources.nova_compute.limits.memory | quote }}
              cpu: {{ .Values.resources.nova_compute.limits.cpu | quote }}
          {{- end }}
          securityContext:
            privileged: true
          command:
            - nova-compute
            - --config-file
            - /etc/nova/nova.conf
          volumeMounts:
            - name: novaconf
              mountPath: /etc/nova/nova.conf
              subPath: nova.conf
            - mountPath: /lib/modules
              name: libmodules
              readOnly: true
            - mountPath: /var/lib/nova
              name: varlibnova
            - mountPath: /var/lib/libvirt
              name: varliblibvirt
            - mountPath: /run
              name: run
            - mountPath: /sys/fs/cgroup
              name: cgroup
            - mountPath: /etc/resolv.conf
              name: resolvconf
              subPath: resolv.conf
            {{- if .Values.ceph.enabled }}
            - name: cephconf
              mountPath: /etc/ceph/ceph.conf
              subPath: ceph.conf
            - name: cephclientcinderkeyring
              mountPath: /etc/ceph/ceph.client.{{ .Values.ceph.cinder_user }}.keyring
              subPath: ceph.client.{{ .Values.ceph.cinder_user }}.keyring
            {{- end }}
      volumes:
        - name: novaconf
          configMap:
            name: nova-etc
            items:
            - key: nova.conf
              path: nova.conf
        - name: resolvconf
          configMap:
            name: nova-etc
            items:
            - key: resolv.conf
              path: resolv.conf
        - name: libmodules
          hostPath:
            path: /lib/modules
        - name: varlibnova
          hostPath:
            path: /var/lib/nova
        - name: varliblibvirt
          hostPath:
            path: /var/lib/libvirt
        - name: run
          hostPath:
            path: /run
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
        {{- if .Values.ceph.enabled }}
        - name: cephconf
          configMap:
            name: nova-etc
            items:
            - key: ceph.conf
              path: ceph.conf
        - name: cephclientcinderkeyring
          configMap:
            name: nova-etc
            items:
            - key: ceph.client.cinder.keyring.yaml
              path: ceph.client.cinder.keyring.yaml
        {{- end }}
