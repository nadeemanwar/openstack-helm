{{- $envAll := . }}
{{- $dependencies := .Values.dependencies.dashboard }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: horizon
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.upgrades.revision_history }}
  strategy:
    type: {{ .Values.upgrades.pod_replacement_strategy }}
    {{ if eq .Values.upgrades.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.upgrades.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.upgrades.rolling_update.max_surge }}
    {{ end }}  
  template:
    metadata:
      labels:
        app: horizon
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.hash" }}
        pod.beta.kubernetes.io/init-containers: '[
{{ tuple $envAll $dependencies | include "helm-toolkit.kubernetes_entrypoint_init_container" | indent 10 }}
        ]'
    spec:
      nodeSelector:
        {{ .Values.labels.node_selector_key }}: {{ .Values.labels.node_selector_value }}
      containers:
        - name: horizon
          image: {{ .Values.images.horizon }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
          {{- if .Values.resources.enabled }}
          resources:
            limits:
              cpu: {{ .Values.resources.dashboard.limits.cpu | quote }}
              memory: {{ .Values.resources.dashboard.limits.memory | quote }}
            requests:
              cpu: {{ .Values.resources.dashboard.requests.cpu | quote }}
              memory: {{ .Values.resources.dashboard.requests.memory | quote }}
          {{- end }}
          command:
            - bash
            - /tmp/start.sh
          ports:
            - containerPort: {{ .Values.network.port }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.network.port }}
          volumeMounts:
            - name: startsh
              mountPath: /tmp/start.sh
              subPath: start.sh
            - name: horizonconf
              mountPath: /etc/apache2/sites-enabled/000-default.conf
              subPath: horizon.conf
            - name: localsettings
              mountPath: /etc/openstack-dashboard/local_settings
              subPath: local_settings
          securityContext:
            runAsUser: 0              
      volumes:
        - name: startsh
          configMap:
            name: horizon-bin
        - name: horizonconf
          configMap:
            name: horizon-etc
        - name: localsettings
          configMap:
            name: horizon-etc
