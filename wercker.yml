# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html

box: golang

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html

  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace

    # Gets the dependencies
    - script:
        name: Install dependencies 
        code: |
          echo "The GOPATH is $GOPATH"
          export GLIDE_VERSION=v0.12.3
          ls $GOPATH/src/
          wget "https://github.com/Masterminds/glide/releases/download/$GLIDE_VERSION/glide-$GLIDE_VERSION-linux-amd64.tar.gz"
          mkdir -p $WERCKER_ROOT/bin
          tar -vxz -C $WERCKER_ROOT/bin --strip=1 -f glide-$GLIDE_VERSION-linux-amd64.tar.gz
          export PATH="$WERCKER_ROOT/bin:$PATH" GLIDE_HOME="$WERCKER_ROOT/.glide" 

    # Build the project
    - script:
        name: helm build
        code: |
          cd $GOPATH/src/
          mkdir k8s.io && cd k8s.io
          git clone https://github.com/kubernetes/helm
          cd helm && make bootstrap build
          mv bin/helm $WERCKER_ROOT/bin 

    # Test the project
    - script:
        name: Install and dryrun test helm charts 
        code: |
          
          echo $WERCKER_ROOT
          cd /pipeline/build
          bash travis-ci/kubeadm_setup.sh  
          $GOPATH/src/k8s.io/helm/bin/tiller &
          export HELM_HOST=localhost:44134
          helm init --client-only
          helm version
          helm serve &
          sleep 1m
          helm repo add local http://localhost:8879/charts
          helm repo update
          make
          bash travis-ci/charts_dry_run.sh 

